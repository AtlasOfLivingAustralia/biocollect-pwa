AWSTemplateFormatVersion: '2010-09-09'
Description: Code pipeline for the BioCollect PWA site

Parameters:
  pAutoDeploy:
    Type: String
    Description: Sets the pipeline to autodeploy on repo changes
  pBootstrapStackName:
    Type: String
    Description: The name of the bootstrap stack
  pBucketsStackName:
    Type: String
    Description: The name of the bucket stack
  pCleanBranch:
    Type: String
    Description: A cleaned version of the code branch name
    Default: development
  pEnvironment:
    Type: String
    Description: The AWS environment this belongs to
  pGitHubRepositoryName:
    Type: String
    Description: GitHub repository name.
  pGitHubOwner:
    Type: String
    Description: GitHub owner
  pGitHubBranch:
    Type: String
    Description: GitHub branch we're deploying from
  pProductComponent:
    Type: String
    Description: The name of the product component
  pProductName:
    Type: String
    Description: The name of the product
  pUsE1ArtifactsBucket:
    Type: String
    Description: Common us-east-1 artifacts bucket used by CodePipeline and CodeBuild
  pPipelineFingerprint:
    Type: String
    Description: The fingerprint of the pipeline, used to determine if it's been modified
  pRestartExecutionOnUpdate:
    Type: String
    Description: Restart that pipeline if it's been updated
    AllowedValues:
         - true 
         - false

Conditions:
  IsDev: !Equals
    - !Ref pEnvironment
    - development
  AutoDeploy: !Equals
    - !Ref pAutoDeploy
    - true


Resources:
  ExportConfig:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub
        - '${pProductName}-${pProductComponent}-export-config-${ResourceName}'
        - ResourceName: !If [IsDev, !Ref pCleanBranch, !Ref pEnvironment]
      Description: Load the environment and build the CloudFormation template config file
      ServiceRole:
        Fn::ImportValue:
          Fn::Sub: ${pBootstrapStackName}-CodeBuildServiceRoleArn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        EnvironmentVariables:
          - Name: ARTIFACTS_BUCKET
            Value:
              Fn::ImportValue:
                Fn::Sub: ${pBucketsStackName}-${AWS::Region}-CodePipelineArtifactBucketName
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub cicd/${pProductComponent}/pipeline/export_config_buildspec.yaml
      TimeoutInMinutes: 5

  BuildCode:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub
        - '${pProductName}-${pProductComponent}-build-site-${ResourceName}'
        - ResourceName: !If [IsDev, !Ref pCleanBranch, !Ref pEnvironment]
      Description: Build the BioCollect PWA site
      ServiceRole:
        Fn::ImportValue:
          Fn::Sub: ${pBootstrapStackName}-CodeBuildServiceRoleArn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        EnvironmentVariables:
          - Name: ARTIFACTS_BUCKET
            Value:
              Fn::ImportValue:
                Fn::Sub: ${pBucketsStackName}-${AWS::Region}-CodePipelineArtifactBucketName

      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub cicd/${pProductComponent}/pipeline/npm_build_buildspec.yaml
      TimeoutInMinutes: 10

  EmptyBucket:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub
        - '${pProductName}-${pProductComponent}-empty-bucket-${ResourceName}'
        - ResourceName: !If [IsDev, !Ref pCleanBranch, !Ref pEnvironment]
      Description: Empty the source s3 bucket so it can be deleted
      ServiceRole:
        Fn::ImportValue:
          Fn::Sub: ${pBootstrapStackName}-CodeBuildServiceRoleArn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub cicd/${pProductComponent}/pipeline/empty_bucket_buildspec.yaml
      TimeoutInMinutes: 5

  DeployNotification:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub 
              - ${pProductName}-deploy-notification-${ResourceName}
              - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]
      Description: Send out the deploy notifications
      ServiceRole:
        Fn::ImportValue:
          Fn::Sub: ${pBootstrapStackName}-CodeBuildServiceRoleArn
      Artifacts:  
        Type: CODEPIPELINE            
      Environment:           
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0  
      Source:            
        Type: CODEPIPELINE
        BuildSpec: !Sub cicd/${pProductComponent}/pipeline/deploy_notification_buildspec.yaml
      TimeoutInMinutes: 5

  Pipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: !Sub
        - '${pProductName}-${pProductComponent}-${ResourceName}'
        - ResourceName: !If [IsDev, !Ref pCleanBranch, !Ref pEnvironment]
      PipelineType: V2
      RoleArn:
        Fn::ImportValue:
          Fn::Sub: ${pBootstrapStackName}-CodePipelineServiceRoleArn
      ArtifactStores:
        - ArtifactStore:
            Type: S3
            Location: !Ref pUsE1ArtifactsBucket
          Region: us-east-1
        - ArtifactStore:
            Type: S3
            Location: 
              Fn::ImportValue:
                Fn::Sub: ${pBucketsStackName}-${AWS::Region}-CodePipelineArtifactBucketName
          Region: !Ref AWS::Region
      DisableInboundStageTransitions:
        - Reason: To prevent accidental teardown
          StageName: Teardown
      RestartExecutionOnUpdate: !Ref pRestartExecutionOnUpdate
      Triggers:
        - ProviderType: CodeStarSourceConnection
          GitConfiguration:
            Push:
              - Branches:
                  Includes:
                    - !If [ AutoDeploy, !Ref pGitHubBranch, bogo-branch ]
                FilePaths:
                  Includes:
                    - !Sub cicd/${pProductComponent}/**
            SourceActionName: CheckoutSrc
      Variables:
        - Name: SRC_BRANCH
          DefaultValue: !Ref pGitHubBranch
          Description: The branch this pipeline is deploying from
        - Name: PIPELINE_FINGERPRINT
          DefaultValue: !Ref pPipelineFingerprint
          Description: The fingerprint of the pipeline, used to determine if it's been modified

      Stages:
        - Name: Checkout_Source
          Actions:
            - Name: CheckoutSrc
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: 1
              Configuration:
                ConnectionArn:
                  Fn::ImportValue:
                    Fn::Sub: ${pBootstrapStackName}-CodestarConnectionArn
                FullRepositoryId: !Sub ${pGitHubOwner}/${pGitHubRepositoryName}
                BranchName: !Ref pGitHubBranch
                OutputArtifactFormat: CODE_ZIP
                DetectChanges: !Ref pAutoDeploy
              Namespace: CheckoutSrcNS
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: Deploy_Infrastructure
          Actions:
            - Name: ExportConfig
              ActionTypeId:
                Owner: AWS
                Category: Build
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref ExportConfig
                EnvironmentVariables: !Sub |
                  [
                    { "name":"CLEAN_BRANCH", "value":"${pCleanBranch}" },
                    { "name":"COMMIT_ID", "value":"#{CheckoutSrcNS.CommitId}" },
                    { "name":"ENVIRONMENT", "value":"${pEnvironment}" },
                    { "name":"PIPELINE_FINGERPRINT", "value":"#{variables.PIPELINE_FINGERPRINT}" },
                    { "name":"PRODUCT_COMPONENT", "value":"${pProductComponent}" },
                    { "name":"SRC_BRANCH", "value":"#{CheckoutSrcNS.BranchName}" }
                  ]
              Namespace: ExportConfigNS
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: ExportConfigArtifact
              RunOrder: 1
            - Name: DeployWafCFStack
              ActionTypeId:
                Owner: AWS
                Category: Deploy
                Version: 1
                Provider: CloudFormation
              Configuration:
                TemplatePath: !Sub 'ExportConfigArtifact::cicd/${pProductComponent}/app/#{ExportConfigNS.WAF_STACK_FILE_PFIX}.yaml'
                TemplateConfiguration: !Sub 'ExportConfigArtifact::cicd/${pProductComponent}/app/#{ExportConfigNS.WAF_STACK_FILE_PFIX}_template_config.json'
                ActionMode: !If [ IsDev, REPLACE_ON_FAILURE, CREATE_UPDATE]
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn:
                  Fn::ImportValue:
                    Fn::Sub: ${pBootstrapStackName}-CloudFormationServiceRoleArn
                StackName: '#{ExportConfigNS.WAF_STACK_NAME}'
              InputArtifacts:
                - Name: ExportConfigArtifact
              Namespace: WafCloudFormationOutNS
              OutputArtifacts: []
              Region: us-east-1
              RunOrder: 2
            - Name: DeploySiteCFStack
              ActionTypeId:
                Owner: AWS
                Category: Deploy
                Version: 1
                Provider: CloudFormation
              Configuration:
                TemplatePath: !Sub 'ExportConfigArtifact::cicd/${pProductComponent}/app/#{ExportConfigNS.PWA_STACK_FILE_PFIX}.yaml'
                TemplateConfiguration: !Sub 'ExportConfigArtifact::cicd/${pProductComponent}/app/#{ExportConfigNS.PWA_STACK_FILE_PFIX}_template_config.json'
                ActionMode: !If [ IsDev, REPLACE_ON_FAILURE, CREATE_UPDATE]
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                ParameterOverrides: |
                  { 
                    "pBioCollectPWAWafWebAclArn": "#{WafCloudFormationOutNS.BioCollectPWAWafWebAclArn}"
                  }
                RoleArn:
                  Fn::ImportValue:
                    Fn::Sub: ${pBootstrapStackName}-CloudFormationServiceRoleArn
                StackName: '#{ExportConfigNS.PWA_STACK_NAME}'
              InputArtifacts:
                - Name: ExportConfigArtifact
              Namespace: AppCloudFormationOutNS
              OutputArtifacts: []
              RunOrder: 3
        - Name: Publish_Website
          Actions:
            - Name: BuildCode
              ActionTypeId:
                Owner: AWS
                Category: Build
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref BuildCode
                EnvironmentVariables: |
                  [
                    { "name":"SRC_BRANCH", "value":"#{CheckoutSrcNS.BranchName}" },
                    { "name":"ENVIRONMENT", "value":"#{ExportConfigNS.ENVIRONMENT}" },
                    { "name":"COMMIT_ID", "value":"#{CheckoutSrcNS.CommitId}" }
                  ]
              Namespace: BuildBioCollectPWANS
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildBioCollectPWAArtifact
              RunOrder: 1
            - Name: EmptyBucket
              ActionTypeId:
                Owner: AWS
                Category: Build
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref EmptyBucket
                EnvironmentVariables: |
                  [
                    { "name":"SOURCE_BUCKET", "value":"#{ExportConfigNS.SOURCE_BUCKET}" },
                    { "name":"BUCKET_PATH", "value":"#{ExportConfigNS.BUCKET_PATH}" }
                  ]
              Namespace: EmptyBucketPreDeployNS
              InputArtifacts:
                - Name: SourceArtifact
              RunOrder: 2
            - Name: UploadFilesToS3
              ActionTypeId:
                Owner: AWS
                Category: Deploy
                Version: 1
                Provider: S3
              Configuration:
                BucketName: '#{ExportConfigNS.SOURCE_BUCKET}'
                ObjectKey: '#{ExportConfigNS.BUCKET_PATH}'
                Extract: 'true'
                CacheControl: 'public, max-age=#{ExportConfigNS.MAX_AGE}'
              OutputArtifacts: []
              InputArtifacts:
                - Name: BuildBioCollectPWAArtifact
              RunOrder: 3
            - Name: DeployNotification
              ActionTypeId:
                Owner: AWS
                Category: Build
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DeployNotification
                EnvironmentVariables: !Sub |
                  [
                    { "name":"SRC_BRANCH", "value":"${pGitHubBranch}" },
                    { "name":"COMMIT_ID", "value":"#{CheckoutSrcNS.CommitId}" },
                    { "name":"AUTHOR", "value":"#{CheckoutSrcNS.AuthorDisplayName}" },
                    { "name":"REPO", "value":"#{CheckoutSrcNS.FullRepositoryName}" },
                    { "name":"PRODUCT_NAME", "value":"${pProductName}" },
                    { "name":"PRODUCT_COMPONENT", "value":"${pProductComponent}" },
                    { "name":"SLACK_DEPLOY_NOTIFICATION", "value":"#{ExportConfigNS.SLACK_DEPLOY_NOTIFICATION}" },
                    { "name":"SLACK_ALERT_CHANNEL", "value":"#{ExportConfigNS.SLACK_ALERT_CHANNEL}" },
                    { "name":"SUB_DOMAIN", "value":"#{ExportConfigNS.SUB_DOMAIN}" },
                    { "name":"HOSTED_ZONE", "value":"#{ExportConfigNS.HOSTED_ZONE}" },
                    { "name":"ENVIRONMENT", "value":"${pEnvironment}" }
                  ]
              Namespace: DeployNotificationNS
              InputArtifacts:
                - Name: SourceArtifact
              RunOrder: 4
        - Name: Teardown
          Actions:
            - Name: Approval
              ActionTypeId:
                Owner: AWS
                Category: Approval
                Version: 1
                Provider: Manual
              Configuration:
                CustomData: Approval required to tear down this stack
              RunOrder: 1
            - Name: EmptyBucket
              ActionTypeId:
                Owner: AWS
                Category: Build
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref EmptyBucket
                EnvironmentVariables: '[
                  { "name":"SOURCE_BUCKET", "value":"#{ExportConfigNS.SOURCE_BUCKET}" },
                  { "name":"BUCKET_PATH", "value":"#{ExportConfigNS.BUCKET_PATH}" }
                  ]'
              Namespace: EmptyBucketPreDeleteNS
              InputArtifacts:
                - Name: SourceArtifact
              RunOrder: 2
            - Name: TeardownBioCollectPWASite
              ActionTypeId:
                Owner: AWS
                Category: Deploy
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: DELETE_ONLY
                StackName: '#{ExportConfigNS.PWA_STACK_NAME}'
                RoleArn:
                  Fn::ImportValue:
                    Fn::Sub: ${pBootstrapStackName}-CloudFormationServiceRoleArn
              RunOrder: 3
            - Name: TeardownBioCollectPWAWaf
              ActionTypeId:
                Owner: AWS
                Category: Deploy
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: DELETE_ONLY
                StackName: '#{ExportConfigNS.WAF_STACK_NAME}'
                RoleArn:
                  Fn::ImportValue:
                    Fn::Sub: ${pBootstrapStackName}-CloudFormationServiceRoleArn
              Region: us-east-1
              RunOrder: 4
            - Name: ApprovalForPipelineTeardown
              ActionTypeId:
                Owner: AWS
                Category: Approval
                Version: 1
                Provider: Manual
              Configuration:
                CustomData: Approval required to tear down this stack
              RunOrder: 5
            - Name: TeardownCodePipeline
              ActionTypeId:
                Owner: AWS
                Category: Deploy
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: DELETE_ONLY
                StackName: !Ref AWS::StackName
                RoleArn:
                  Fn::ImportValue:
                    Fn::Sub: ${pBootstrapStackName}-CloudFormationServiceRoleArn
              RunOrder: 6

  ExportConfigLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/codebuild/${ExportConfig}
      RetentionInDays: 30
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName

  BuildCodeLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/codebuild/${BuildCode}
      RetentionInDays: 30
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName

  EmptyBucketLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/codebuild/${EmptyBucket}
      RetentionInDays: 30
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName

  DeployNotificationCodeBuildLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties: 
      LogGroupName: !Sub /aws/codebuild/${DeployNotification}
      RetentionInDays: 30
      Tags:   
        - Key: Name
          Value: !Ref AWS::StackName

Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
